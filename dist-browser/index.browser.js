!function(e,t){"object"==typeof exports&&"object"==typeof module?module.exports=t():"function"==typeof define&&define.amd?define([],t):"object"==typeof exports?exports.PQJS=t():e.PQJS=t()}(this,()=>(()=>{var e={343:(e,t,i)=>{i(606);var r,n=(r="undefined"!=typeof document?document.currentScript?.src:void 0,async function(e={}){var t,i,n=e,o="";try{o=new URL(".",r).href}catch{}if("object"!=typeof window&&"undefined"==typeof WorkerGlobalScope)throw new Error("not compiled for this environment (did you build to HTML and try to run it not on the web, or set ENVIRONMENT to something - like node - and run it someplace else - like on the web?)");i=async e=>{u(!p(e),"readAsync does not work with file:// URLs");var t=await fetch(e,{credentials:"same-origin"});if(t.ok)return t.arrayBuffer();throw new Error(t.status+" : "+t.url)};var a,l=console.log.bind(console),s=console.error.bind(console);u(!0,"worker environment detected but not enabled at build time.  Add `worker` to `-sENVIRONMENT` to enable."),u(!0,"node environment detected but not enabled at build time.  Add `node` to `-sENVIRONMENT` to enable."),u(!0,"shell environment detected but not enabled at build time.  Add `shell` to `-sENVIRONMENT` to enable."),"object"!=typeof WebAssembly&&s("no native wasm support detected");var c=!1;function u(e,t){e||A("Assertion failed"+(t?": "+t:""))}var _,d,m,h,f,g,p=e=>e.startsWith("file://");function y(){if(!c){var e=ee();0==e&&(e+=4);var t=g[e>>2],i=g[e+4>>2];34821223==t&&2310721022==i||A(`Stack overflow! Stack cookie has been overwritten at ${$(e)}, expected hex dwords 0x89BACDFE and 0x2135467, but received ${$(i)} ${$(t)}`),1668509029!=g[0]&&A("Runtime error: The application has corrupted its heap memory area (address zero)!")}}function S(e){Object.getOwnPropertyDescriptor(n,e)||Object.defineProperty(n,e,{configurable:!0,set(){A(`Attempt to set \`Module.${e}\` after it has already been processed.  This can happen, for example, when code is injected via '--post-js' rather than '--pre-js'`)}})}function F(e){return()=>u(!1,`call to '${e}' via reference taken before Wasm module initialization`)}function w(e){Object.getOwnPropertyDescriptor(n,e)||Object.defineProperty(n,e,{configurable:!0,get(){var t,i=`'${e}' was not exported. add it to EXPORTED_RUNTIME_METHODS (see the Emscripten FAQ)`;("FS_createPath"===(t=e)||"FS_createDataFile"===t||"FS_createPreloadedFile"===t||"FS_unlink"===t||"addRunDependency"===t||"FS_createLazyFile"===t||"FS_createDevice"===t||"removeRunDependency"===t)&&(i+=". Alternatively, forcing filesystem support (-sFORCE_FILESYSTEM) can export this for you"),A(i)}})}(()=>{var e=new Int16Array(1),t=new Int8Array(e.buffer);if(e[0]=25459,115!==t[0]||99!==t[1])throw"Runtime error: expected the system to be little-endian! (Run with -sSUPPORT_BIG_ENDIAN to bypass)"})();var v=!1;u("undefined"!=typeof Int32Array&&"undefined"!=typeof Float64Array&&null!=Int32Array.prototype.subarray&&null!=Int32Array.prototype.set,"JS engine does not provide full typed array support");var b=0,E=null,T={},k=null;function A(e){n.onAbort?.(e),s(e="Aborted("+e+")"),c=!0;var t=new WebAssembly.RuntimeError(e);throw d?.(t),t}var M,P={error(){A("Filesystem support (FS) was not included. The problem is that you are using files from JS, but files were not used from C/C++, so filesystem support was not auto-included. You can force-include filesystem support with -sFORCE_FILESYSTEM")},init(){P.error()},createDataFile(){P.error()},createPreloadedFile(){P.error()},createLazyFile(){P.error()},open(){P.error()},mkdev(){P.error()},registerDevice(){P.error()},analyzePath(){P.error()},ErrnoError(){P.error()}};function I(e,t){return(...i)=>{u(v,`native function \`${e}\` called before runtime initialization`);var r=ae[e];return u(r,`exported native function \`${e}\` not found`),u(i.length<=t,`native function \`${e}\` called with ${i.length} args but expects ${t}`),r(...i)}}async function R(e,t,r){if(!e&&"function"==typeof WebAssembly.instantiateStreaming)try{var n=fetch(t,{credentials:"same-origin"});return await WebAssembly.instantiateStreaming(n,r)}catch(e){s(`wasm streaming compile failed: ${e}`),s("falling back to ArrayBuffer instantiation")}return async function(e,t){try{var r=await async function(e){if(!a)try{var t=await i(e);return new Uint8Array(t)}catch{}return function(e){if(e==M&&a)return new Uint8Array(a);throw"both async and sync fetching of the wasm failed"}(e)}(e);return await WebAssembly.instantiate(r,t)}catch(e){s(`failed to asynchronously prepare wasm: ${e}`),p(M)&&s(`warning: Loading from a file URI (${M}) is not supported in most browsers. See https://emscripten.org/docs/getting_started/FAQ.html#how-do-i-run-a-local-webserver-for-testing-why-does-my-program-stall-in-downloading-or-preparing`),A(e)}}(t,r)}class C{name="ExitStatus";constructor(e){this.message=`Program terminated with exit(${e})`,this.status=e}}var O,L=e=>{for(;e.length>0;)e.shift()(n)},U=[],x=e=>U.push(e),D=[],N=e=>D.push(e),W=!0,$=e=>(u("number"==typeof e),"0x"+(e>>>=0).toString(16).padStart(8,"0")),H=()=>ne(),z=e=>{z.shown||={},z.shown[e]||(z.shown[e]=1,s(e))},G=()=>W||!1,j="undefined"!=typeof TextDecoder?new TextDecoder:void 0,B=(e,t=0,i=NaN)=>{for(var r=t+i,n=t;e[n]&&!(n>=r);)++n;if(n-t>16&&e.buffer&&j)return j.decode(e.subarray(t,n));for(var o="";t<n;){var a=e[t++];if(128&a){var l=63&e[t++];if(192!=(224&a)){var s=63&e[t++];if(224==(240&a)?a=(15&a)<<12|l<<6|s:(240!=(248&a)&&z("Invalid UTF-8 leading byte "+$(a)+" encountered when deserializing a UTF-8 string in wasm memory to a JS string!"),a=(7&a)<<18|l<<12|s<<6|63&e[t++]),a<65536)o+=String.fromCharCode(a);else{var c=a-65536;o+=String.fromCharCode(55296|c>>10,56320|1023&c)}}else o+=String.fromCharCode((31&a)<<6|l)}else o+=String.fromCharCode(a)}return o},Y=[null,[],[]],K=(e,t)=>{var i=Y[e];u(i),0===t||10===t?((1===e?l:s)(B(i)),i.length=0):i.push(t)},V=()=>{Z(0),Y[1].length&&K(1,10),Y[2].length&&K(2,10)},J=e=>{(J=e=>crypto.getRandomValues(e))(e)},q=e=>re(e),Q=(e,t,i,r,o)=>{var a={string:e=>{var t=0;return null!=e&&0!==e&&(t=(e=>{var t=(e=>{for(var t=0,i=0;i<e.length;++i){var r=e.charCodeAt(i);r<=127?t++:r<=2047?t+=2:r>=55296&&r<=57343?(t+=4,++i):t+=3}return t})(e)+1,i=q(t);return((e,t,i)=>{u("number"==typeof i,"stringToUTF8(str, outPtr, maxBytesToWrite) is missing the third parameter that specifies the length of the output buffer!"),((e,t,i,r)=>{if(u("string"==typeof e,`stringToUTF8Array expects a string (got ${typeof e})`),!(r>0))return 0;for(var n=i,o=i+r-1,a=0;a<e.length;++a){var l=e.codePointAt(a);if(l<=127){if(i>=o)break;t[i++]=l}else if(l<=2047){if(i+1>=o)break;t[i++]=192|l>>6,t[i++]=128|63&l}else if(l<=65535){if(i+2>=o)break;t[i++]=224|l>>12,t[i++]=128|l>>6&63,t[i++]=128|63&l}else{if(i+3>=o)break;l>1114111&&z("Invalid Unicode code point "+$(l)+" encountered when serializing a JS string to a UTF-8 string in wasm memory! (Valid unicode code points should be in range 0-0x10FFFF)."),t[i++]=240|l>>18,t[i++]=128|l>>12&63,t[i++]=128|l>>6&63,t[i++]=128|63&l,a++}}t[i]=0})(e,f,t,i)})(e,i,t),i})(e)),t},array:e=>{var t,i,r=q(e.length);return i=r,u((t=e).length>=0,"writeArrayToMemory array must have a length (should be an array or typed array)"),h.set(t,i),r}};var l=(e=>{var t=n["_"+e];return u(t,"Cannot call unknown function "+e+", make sure it is exported"),t})(e),s=[],c=0;if(u("array"!==t,'Return type should not be "array".'),r)for(var _=0;_<r.length;_++){var d=a[i[_]];d?(0===c&&(c=H()),s[_]=d(r[_])):s[_]=r[_]}var m=l(...s);return function(e){return 0!==c&&ie(c),function(e){return"string"===t?(u("number"==typeof(i=e),`UTF8ToString expects a number (got ${typeof i})`),i?B(f,i,void 0):""):"boolean"===t?Boolean(e):e;var i}(e)}(m)};n.noExitRuntime&&(W=n.noExitRuntime),n.print&&(l=n.print),n.printErr&&(s=n.printErr),n.wasmBinary&&(a=n.wasmBinary),n.FS_createDataFile=P.createDataFile,n.FS_createPreloadedFile=P.createPreloadedFile,O="fetchSettings",Object.getOwnPropertyDescriptor(n,O)&&A(`\`Module.${O}\` was supplied but \`${O}\` not included in INCOMING_MODULE_JS_API`),n.arguments&&n.arguments,n.thisProgram&&n.thisProgram,u(void 0===n.memoryInitializerPrefixURL,"Module.memoryInitializerPrefixURL option was removed, use Module.locateFile instead"),u(void 0===n.pthreadMainPrefixURL,"Module.pthreadMainPrefixURL option was removed, use Module.locateFile instead"),u(void 0===n.cdInitializerPrefixURL,"Module.cdInitializerPrefixURL option was removed, use Module.locateFile instead"),u(void 0===n.filePackagePrefixURL,"Module.filePackagePrefixURL option was removed, use Module.locateFile instead"),u(void 0===n.read,"Module.read option was removed"),u(void 0===n.readAsync,"Module.readAsync option was removed (modify readAsync in JS)"),u(void 0===n.readBinary,"Module.readBinary option was removed (modify readBinary in JS)"),u(void 0===n.setWindowTitle,"Module.setWindowTitle option was removed (modify emscripten_set_window_title in JS)"),u(void 0===n.TOTAL_MEMORY,"Module.TOTAL_MEMORY has been renamed Module.INITIAL_MEMORY"),u(void 0===n.ENVIRONMENT,"Module.ENVIRONMENT has been deprecated. To force the environment, use the ENVIRONMENT compile-time option (for example, -sENVIRONMENT=web or -sENVIRONMENT=node)"),u(void 0===n.STACK_SIZE,"STACK_SIZE can no longer be set at runtime.  Use -sSTACK_SIZE at link time"),u(void 0===n.wasmMemory,"Use of `wasmMemory` detected.  Use -sIMPORTED_MEMORY to define wasmMemory externally"),u(void 0===n.INITIAL_MEMORY,"Detected runtime INITIAL_MEMORY setting.  Use -sIMPORTED_MEMORY to define wasmMemory dynamically"),n.ccall=Q,n.cwrap=(e,t,i,r)=>(...r)=>Q(e,t,i,r),["writeI53ToI64","writeI53ToI64Clamped","writeI53ToI64Signaling","writeI53ToU64Clamped","writeI53ToU64Signaling","readI53FromI64","readI53FromU64","convertI32PairToI53","convertI32PairToI53Checked","convertU32PairToI53","getTempRet0","setTempRet0","zeroMemory","getHeapMax","growMemory","withStackSave","strError","inetPton4","inetNtop4","inetPton6","inetNtop6","readSockaddr","writeSockaddr","emscriptenLog","readEmAsmArgs","jstoi_q","getExecutableName","autoResumeAudioContext","getDynCaller","dynCall","handleException","runtimeKeepalivePush","runtimeKeepalivePop","callUserCallback","maybeExit","asmjsMangle","asyncLoad","alignMemory","mmapAlloc","HandleAllocator","getNativeTypeSize","getUniqueRunDependency","addOnInit","addOnPostCtor","addOnPreMain","addOnExit","STACK_SIZE","STACK_ALIGN","POINTER_SIZE","ASSERTIONS","uleb128Encode","sigToWasmTypes","generateFuncType","convertJsFunctionToWasm","getEmptyTableSlot","updateTableMap","getFunctionAddress","addFunction","removeFunction","reallyNegative","unSign","strLen","reSign","formatString","intArrayFromString","intArrayToString","AsciiToString","stringToAscii","UTF16ToString","stringToUTF16","lengthBytesUTF16","UTF32ToString","stringToUTF32","lengthBytesUTF32","stringToNewUTF8","registerKeyEventCallback","maybeCStringToJsString","findEventTarget","getBoundingClientRect","fillMouseEventData","registerMouseEventCallback","registerWheelEventCallback","registerUiEventCallback","registerFocusEventCallback","fillDeviceOrientationEventData","registerDeviceOrientationEventCallback","fillDeviceMotionEventData","registerDeviceMotionEventCallback","screenOrientation","fillOrientationChangeEventData","registerOrientationChangeEventCallback","fillFullscreenChangeEventData","registerFullscreenChangeEventCallback","JSEvents_requestFullscreen","JSEvents_resizeCanvasForFullscreen","registerRestoreOldStyle","hideEverythingExceptGivenElement","restoreHiddenElements","setLetterbox","softFullscreenResizeWebGLRenderTarget","doRequestFullscreen","fillPointerlockChangeEventData","registerPointerlockChangeEventCallback","registerPointerlockErrorEventCallback","requestPointerLock","fillVisibilityChangeEventData","registerVisibilityChangeEventCallback","registerTouchEventCallback","fillGamepadEventData","registerGamepadEventCallback","registerBeforeUnloadEventCallback","fillBatteryEventData","battery","registerBatteryEventCallback","setCanvasElementSize","getCanvasElementSize","jsStackTrace","getCallstack","convertPCtoSourceLocation","getEnvStrings","checkWasiClock","wasiRightsToMuslOFlags","wasiOFlagsToMuslOFlags","safeSetTimeout","setImmediateWrapped","safeRequestAnimationFrame","clearImmediateWrapped","registerPostMainLoop","registerPreMainLoop","getPromise","makePromise","idsToPromises","makePromiseCallback","ExceptionInfo","findMatchingCatch","Browser_asyncPrepareDataCounter","isLeapYear","ydayFromDate","arraySum","addDays","getSocketFromFD","getSocketAddress","FS_createPreloadedFile","FS_modeStringToFlags","FS_getMode","FS_stdin_getChar","FS_mkdirTree","_setNetworkCallback","heapObjectForWebGLType","toTypedArrayIndex","webgl_enable_ANGLE_instanced_arrays","webgl_enable_OES_vertex_array_object","webgl_enable_WEBGL_draw_buffers","webgl_enable_WEBGL_multi_draw","webgl_enable_EXT_polygon_offset_clamp","webgl_enable_EXT_clip_control","webgl_enable_WEBGL_polygon_mode","emscriptenWebGLGet","computeUnpackAlignedImageSize","colorChannelsInGlTextureFormat","emscriptenWebGLGetTexPixelData","emscriptenWebGLGetUniform","webglGetUniformLocation","webglPrepareUniformLocationsBeforeFirstUse","webglGetLeftBracePos","emscriptenWebGLGetVertexAttrib","__glGetActiveAttribOrUniform","writeGLArray","registerWebGlEventCallback","runAndAbortIfError","ALLOC_NORMAL","ALLOC_STACK","allocate","writeStringToMemory","writeAsciiToMemory","demangle","stackTrace"].forEach(function(e){w(e)}),["run","addRunDependency","removeRunDependency","out","err","callMain","abort","wasmMemory","wasmExports","HEAPF32","HEAPF64","HEAP8","HEAP16","HEAPU16","HEAP32","HEAP64","HEAPU64","writeStackCookie","checkStackCookie","INT53_MAX","INT53_MIN","bigintToI53Checked","stackSave","stackRestore","stackAlloc","ptrToString","exitJS","abortOnCannotGrowMemory","ENV","ERRNO_CODES","DNS","Protocols","Sockets","timers","warnOnce","readEmAsmArgsArray","keepRuntimeAlive","wasmTable","noExitRuntime","addOnPreRun","addOnPostRun","freeTableIndexes","functionsInTableMap","setValue","getValue","PATH","PATH_FS","UTF8Decoder","UTF8ArrayToString","UTF8ToString","stringToUTF8Array","stringToUTF8","lengthBytesUTF8","UTF16Decoder","stringToUTF8OnStack","writeArrayToMemory","JSEvents","specialHTMLTargets","findCanvasEventTarget","currentFullscreenStrategy","restoreOldWindowedStyle","UNWIND_CACHE","ExitStatus","flush_NO_FILESYSTEM","initRandomFill","randomFill","emSetImmediate","emClearImmediate_deps","emClearImmediate","promiseMap","uncaughtExceptionCount","exceptionLast","exceptionCaught","Browser","requestFullscreen","requestFullScreen","setCanvasSize","getUserMedia","createContext","getPreloadedImageData__data","wget","MONTH_DAYS_REGULAR","MONTH_DAYS_LEAP","MONTH_DAYS_REGULAR_CUMULATIVE","MONTH_DAYS_LEAP_CUMULATIVE","SYSCALLS","preloadPlugins","FS_stdin_getChar_buffer","FS_unlink","FS_createPath","FS_createDevice","FS_readFile","FS","FS_root","FS_mounts","FS_devices","FS_streams","FS_nextInode","FS_nameTable","FS_currentPath","FS_initialized","FS_ignorePermissions","FS_filesystems","FS_syncFSRequests","FS_readFiles","FS_lookupPath","FS_getPath","FS_hashName","FS_hashAddNode","FS_hashRemoveNode","FS_lookupNode","FS_createNode","FS_destroyNode","FS_isRoot","FS_isMountpoint","FS_isFile","FS_isDir","FS_isLink","FS_isChrdev","FS_isBlkdev","FS_isFIFO","FS_isSocket","FS_flagsToPermissionString","FS_nodePermissions","FS_mayLookup","FS_mayCreate","FS_mayDelete","FS_mayOpen","FS_checkOpExists","FS_nextfd","FS_getStreamChecked","FS_getStream","FS_createStream","FS_closeStream","FS_dupStream","FS_doSetAttr","FS_chrdev_stream_ops","FS_major","FS_minor","FS_makedev","FS_registerDevice","FS_getDevice","FS_getMounts","FS_syncfs","FS_mount","FS_unmount","FS_lookup","FS_mknod","FS_statfs","FS_statfsStream","FS_statfsNode","FS_create","FS_mkdir","FS_mkdev","FS_symlink","FS_rename","FS_rmdir","FS_readdir","FS_readlink","FS_stat","FS_fstat","FS_lstat","FS_doChmod","FS_chmod","FS_lchmod","FS_fchmod","FS_doChown","FS_chown","FS_lchown","FS_fchown","FS_doTruncate","FS_truncate","FS_ftruncate","FS_utime","FS_open","FS_close","FS_isClosed","FS_llseek","FS_read","FS_write","FS_mmap","FS_msync","FS_ioctl","FS_writeFile","FS_cwd","FS_chdir","FS_createDefaultDirectories","FS_createDefaultDevices","FS_createSpecialDirectories","FS_createStandardStreams","FS_staticInit","FS_init","FS_quit","FS_findObject","FS_analyzePath","FS_createFile","FS_createDataFile","FS_forceLoadFile","FS_createLazyFile","FS_absolutePath","FS_createFolder","FS_createLink","FS_joinPath","FS_mmapAlloc","FS_standardizePath","MEMFS","TTY","PIPEFS","SOCKFS","tempFixedLengthArray","miniTempWebGLFloatBuffers","miniTempWebGLIntBuffers","GL","AL","GLUT","EGL","GLEW","IDBStore","SDL","SDL_gfx","allocateUTF8","allocateUTF8OnStack","print","printErr","jstoi_s"].forEach(w),n._init_dilithium_variants=F("_init_dilithium_variants"),n._free_dilithium_variants=F("_free_dilithium_variants"),n._dilithium2_keypair=F("_dilithium2_keypair"),n._dilithium2_sign=F("_dilithium2_sign"),n._dilithium2_verify=F("_dilithium2_verify"),n._dilithium2_get_public_key_length=F("_dilithium2_get_public_key_length"),n._dilithium2_get_secret_key_length=F("_dilithium2_get_secret_key_length"),n._dilithium2_get_signature_length=F("_dilithium2_get_signature_length"),n._dilithium3_keypair=F("_dilithium3_keypair"),n._dilithium3_sign=F("_dilithium3_sign"),n._dilithium3_verify=F("_dilithium3_verify"),n._dilithium3_get_public_key_length=F("_dilithium3_get_public_key_length"),n._dilithium3_get_secret_key_length=F("_dilithium3_get_secret_key_length"),n._dilithium3_get_signature_length=F("_dilithium3_get_signature_length"),n._dilithium5_keypair=F("_dilithium5_keypair"),n._dilithium5_sign=F("_dilithium5_sign"),n._dilithium5_verify=F("_dilithium5_verify"),n._dilithium5_get_public_key_length=F("_dilithium5_get_public_key_length"),n._dilithium5_get_secret_key_length=F("_dilithium5_get_secret_key_length"),n._dilithium5_get_signature_length=F("_dilithium5_get_signature_length"),n._free=F("_free"),n._malloc=F("_malloc");var X,Z=F("_fflush"),ee=(F("_strerror"),F("_emscripten_stack_get_end")),te=(F("_emscripten_stack_get_base"),F("_emscripten_stack_init")),ie=(F("_emscripten_stack_get_free"),F("__emscripten_stack_restore")),re=F("__emscripten_stack_alloc"),ne=F("_emscripten_stack_get_current"),oe={_abort_js:()=>A("native code called abort()"),emscripten_resize_heap:e=>{f.length,(e=>{A(`Cannot enlarge memory arrays to size ${e} bytes (OOM). Either (1) compile with -sINITIAL_MEMORY=X with X higher than the current value ${h.length}, (2) compile with -sALLOW_MEMORY_GROWTH which allows increasing the size at runtime, or (3) if you want malloc to return NULL (0) instead of this abort, compile with -sABORTING_MALLOC=0`)})(e>>>=0)},exit:(e,t)=>{if(function(){var e=l,t=s,i=!1;l=s=e=>{i=!0};try{V()}catch(e){}l=e,s=t,i&&(z("stdio streams had content in them that was not flushed. you should set EXIT_RUNTIME to 1 (see the Emscripten FAQ), or make sure to emit a newline when you printf etc."),z("(this may also be due to not including full filesystem support - try building with -sFORCE_FILESYSTEM)"))}(),G()&&!t){var i=`program exited (with status: ${e}), but keepRuntimeAlive() is set (counter=0) due to an async operation, so halting execution but not exiting the runtime or preventing further async execution (you can use emscripten_force_exit, if you want to force a true shutdown)`;d?.(i),s(i)}var r;r=e,G()||(n.onExit?.(r),c=!0),((e,t)=>{throw t})(0,new C(r))},fd_close:e=>{A("fd_close called without SYSCALLS_REQUIRE_FILESYSTEM")},fd_seek:function(e,t,i,r){var n;return t=(n=t)<-9007199254740992||n>9007199254740992?NaN:Number(n),70},fd_write:(e,t,i,r)=>{for(var n=0,o=0;o<i;o++){var a=g[t>>2],l=g[t+4>>2];t+=8;for(var s=0;s<l;s++)K(e,f[a+s]);n+=l}return g[r>>2]=n,0},random_get:(e,t)=>(J(f.subarray(e,e+t)),0)},ae=await async function(){function e(e,t){var i;return ae=e.exports,u(m=ae.memory,"memory not found in wasm exports"),i=m.buffer,h=new Int8Array(i),new Int16Array(i),n.HEAPU8=f=new Uint8Array(i),new Uint16Array(i),new Int32Array(i),n.HEAPU32=g=new Uint32Array(i),new Float32Array(i),new Float64Array(i),new BigInt64Array(i),new BigUint64Array(i),function(e){n._init_dilithium_variants=I("init_dilithium_variants",0),n._free_dilithium_variants=I("free_dilithium_variants",0),n._dilithium2_keypair=I("dilithium2_keypair",2),n._dilithium2_sign=I("dilithium2_sign",5),n._dilithium2_verify=I("dilithium2_verify",5),n._dilithium2_get_public_key_length=I("dilithium2_get_public_key_length",0),n._dilithium2_get_secret_key_length=I("dilithium2_get_secret_key_length",0),n._dilithium2_get_signature_length=I("dilithium2_get_signature_length",0),n._dilithium3_keypair=I("dilithium3_keypair",2),n._dilithium3_sign=I("dilithium3_sign",5),n._dilithium3_verify=I("dilithium3_verify",5),n._dilithium3_get_public_key_length=I("dilithium3_get_public_key_length",0),n._dilithium3_get_secret_key_length=I("dilithium3_get_secret_key_length",0),n._dilithium3_get_signature_length=I("dilithium3_get_signature_length",0),n._dilithium5_keypair=I("dilithium5_keypair",2),n._dilithium5_sign=I("dilithium5_sign",5),n._dilithium5_verify=I("dilithium5_verify",5),n._dilithium5_get_public_key_length=I("dilithium5_get_public_key_length",0),n._dilithium5_get_secret_key_length=I("dilithium5_get_secret_key_length",0),n._dilithium5_get_signature_length=I("dilithium5_get_signature_length",0),n._free=I("free",1),n._malloc=I("malloc",1),Z=I("fflush",1),I("strerror",1),ee=e.emscripten_stack_get_end,e.emscripten_stack_get_base,te=e.emscripten_stack_init,e.emscripten_stack_get_free,ie=e._emscripten_stack_restore,re=e._emscripten_stack_alloc,ne=e.emscripten_stack_get_current}(ae),function(e){if(b--,n.monitorRunDependencies?.(b),e?(u(T[e]),delete T[e]):s("warning: run dependency removed without ID"),0==b&&(null!==k&&(clearInterval(k),k=null),E)){var t=E;E=null,t()}}("wasm-instantiate"),ae}var t;t="wasm-instantiate",b++,n.monitorRunDependencies?.(b),t?(u(!T[t]),T[t]=1,null===k&&"undefined"!=typeof setInterval&&(k=setInterval(()=>{if(c)return clearInterval(k),void(k=null);var e=!1;for(var t in T)e||(e=!0,s("still waiting on run dependencies:")),s(`dependency: ${t}`);e&&s("(end of list)")},1e4))):s("warning: run dependency added without ID");var i,r,l=n,_={env:oe,wasi_snapshot_preview1:oe};return n.instantiateWasm?new Promise((t,i)=>{try{n.instantiateWasm(_,(i,r)=>{t(e(i))})}catch(e){s(`Module.instantiateWasm callback failed with error: ${e}`),i(e)}}):(M??=(r="dilithium_wrapper.wasm",n.locateFile?n.locateFile(r,o):o+r),i=await R(a,M,_),u(n===l,"the Module object should not be replaced during async compilation - perhaps the order of HTML elements is wrong?"),l=null,e(i.instance))}();!function(){if(n.preInit)for("function"==typeof n.preInit&&(n.preInit=[n.preInit]);n.preInit.length>0;)n.preInit.shift()();S("preInit")}(),function e(){function t(){u(!X),X=!0,n.calledRun=!0,c||(u(!v),v=!0,y(),ae.__wasm_call_ctors(),_?.(n),n.onRuntimeInitialized?.(),S("onRuntimeInitialized"),u(!n._main,'compiled without a main, but one is present. if you added it from JS, use Module["onRuntimeInitialized"]'),function(){if(y(),n.postRun)for("function"==typeof n.postRun&&(n.postRun=[n.postRun]);n.postRun.length;)x(n.postRun.shift());S("postRun"),L(U)}())}var i;b>0?E=e:(te(),u(!(3&(i=ee()))),0==i&&(i+=4),g[i>>2]=34821223,g[i+4>>2]=2310721022,g[0]=1668509029,function(){if(n.preRun)for("function"==typeof n.preRun&&(n.preRun=[n.preRun]);n.preRun.length;)N(n.preRun.shift());S("preRun"),L(D)}(),b>0?E=e:(n.setStatus?(n.setStatus("Running..."),setTimeout(()=>{setTimeout(()=>n.setStatus(""),1),t()},1)):t(),y()))}(),t=v?n:new Promise((e,t)=>{_=e,d=t});for(const t of Object.keys(n))t in e||Object.defineProperty(e,t,{configurable:!0,get(){A(`Access to module property ('${t}') is no longer possible via the module constructor argument; Instead, use the result of the module constructor.`)}});return t});e.exports=n,e.exports.default=n},606:e=>{var t,i,r=e.exports={};function n(){throw new Error("setTimeout has not been defined")}function o(){throw new Error("clearTimeout has not been defined")}function a(e){if(t===setTimeout)return setTimeout(e,0);if((t===n||!t)&&setTimeout)return t=setTimeout,setTimeout(e,0);try{return t(e,0)}catch(i){try{return t.call(null,e,0)}catch(i){return t.call(this,e,0)}}}!function(){try{t="function"==typeof setTimeout?setTimeout:n}catch(e){t=n}try{i="function"==typeof clearTimeout?clearTimeout:o}catch(e){i=o}}();var l,s=[],c=!1,u=-1;function _(){c&&l&&(c=!1,l.length?s=l.concat(s):u=-1,s.length&&d())}function d(){if(!c){var e=a(_);c=!0;for(var t=s.length;t;){for(l=s,s=[];++u<t;)l&&l[u].run();u=-1,t=s.length}l=null,c=!1,function(e){if(i===clearTimeout)return clearTimeout(e);if((i===o||!i)&&clearTimeout)return i=clearTimeout,clearTimeout(e);try{return i(e)}catch(t){try{return i.call(null,e)}catch(t){return i.call(this,e)}}}(e)}}function m(e,t){this.fun=e,this.array=t}function h(){}r.nextTick=function(e){var t=new Array(arguments.length-1);if(arguments.length>1)for(var i=1;i<arguments.length;i++)t[i-1]=arguments[i];s.push(new m(e,t)),1!==s.length||c||a(d)},m.prototype.run=function(){this.fun.apply(null,this.array)},r.title="browser",r.browser=!0,r.env={},r.argv=[],r.version="",r.versions={},r.on=h,r.addListener=h,r.once=h,r.off=h,r.removeListener=h,r.removeAllListeners=h,r.emit=h,r.prependListener=h,r.prependOnceListener=h,r.listeners=function(e){return[]},r.binding=function(e){throw new Error("process.binding is not supported")},r.cwd=function(){return"/"},r.chdir=function(e){throw new Error("process.chdir is not supported")},r.umask=function(){return 0}},768:function(e,t,i){"use strict";var r,n=this&&this.__createBinding||(Object.create?function(e,t,i,r){void 0===r&&(r=i);var n=Object.getOwnPropertyDescriptor(t,i);n&&!("get"in n?!t.__esModule:n.writable||n.configurable)||(n={enumerable:!0,get:function(){return t[i]}}),Object.defineProperty(e,r,n)}:function(e,t,i,r){void 0===r&&(r=i),e[r]=t[i]}),o=this&&this.__setModuleDefault||(Object.create?function(e,t){Object.defineProperty(e,"default",{enumerable:!0,value:t})}:function(e,t){e.default=t}),a=this&&this.__importStar||(r=function(e){return r=Object.getOwnPropertyNames||function(e){var t=[];for(var i in e)Object.prototype.hasOwnProperty.call(e,i)&&(t[t.length]=i);return t},r(e)},function(e){if(e&&e.__esModule)return e;var t={};if(null!=e)for(var i=r(e),a=0;a<i.length;a++)"default"!==i[a]&&n(t,e,i[a]);return o(t,e),t});Object.defineProperty(t,"__esModule",{value:!0}),t.initDilithium=async function(){if(s)return s;if(!l){const e=await Promise.resolve().then(()=>a(i(343))),t={locateFile:e=>e.endsWith(".wasm")?"./dist-browser/sig/dilithium_wrapper.wasm":e};if(l=await e.default(t),!l||"function"!=typeof l._init_dilithium_variants)throw console.error("[Debug] Module instance:",l),new Error("WASM module not properly initialized - missing required functions");if(!l.HEAPU8||"function"!=typeof l._malloc)throw console.error("[Debug] WASM memory or malloc not initialized:",l),new Error("WASM memory or malloc not properly initialized")}try{const e=await c(2),t=await c(3),i=await c(5);return s={dilithium2:e,dilithium3:t,dilithium5:i},s}catch(e){throw console.error("[Debug] Error creating wrappers:",e),e}},t.cleanupDilithium=function(){if(l)try{"function"==typeof l._free_dilithium_variants?l._free_dilithium_variants():console.warn("[Debug] _free_dilithium_variants not found in module")}catch(e){console.error("[Debug] Error during cleanup:",e)}l=null,s=null};let l=null,s=null;async function c(e){if(!l)throw new Error("Module not initialized. Call initDilithium() first.");const t=l;if(1!==t._init_dilithium_variants())throw new Error("Failed to initialize dilithium variants");const i=t[`_dilithium${e}_get_public_key_length`](),r=t[`_dilithium${e}_get_secret_key_length`](),n=t[`_dilithium${e}_get_signature_length`]();function o(e,t){if(0!==e)throw new Error(`${t} failed with OQS status code: ${e}`)}function a(e,i){if(!e||!i)return null;if(!t.HEAPU8)throw new Error("WASM memory not initialized");if(e+i>t.HEAPU8.length)throw new Error(`Buffer overflow: trying to read ${i} bytes at ${e}, but HEAPU8 length is ${t.HEAPU8.length}`);return new Uint8Array(t.HEAPU8.slice(e,e+i))}function s(e,i){if(i&&e){if(!t.HEAPU8)throw new Error("HEAPU8 is undefined before write");if(i+e.length>t.HEAPU8.length)throw new Error(`Buffer overflow: trying to write ${e.length} bytes at ${i}, but HEAPU8 length is ${t.HEAPU8.length}`);t.HEAPU8.set(e,i)}}return{generateKeypair(){if(!t.HEAPU8)throw new Error("WASM memory not initialized");const n=t._malloc(i);if(!n)throw new Error("Failed to allocate memory for public key");const l=t._malloc(r);if(!l)throw new Error("Failed to allocate memory for secret key");try{if(!n||!l)throw new Error("Failed to allocate memory for keypair");o(t[`_dilithium${e}_keypair`](n,l),"Keypair generation");const s=a(n,i),c=a(l,r);if(!s||!c)throw new Error("Failed to copy keypair data");return{publicKey:s,secretKey:c}}finally{n&&t._free(n),l&&t._free(l)}},sign(i,l){if(!t.HEAPU8)throw new Error("WASM memory not initialized");const c="string"==typeof i?(new TextEncoder).encode(i):i;if(l.length!==r)throw new Error(`Invalid secret key length. Expected ${r}, got ${l.length}`);const u=t._malloc(c.length);if(!u)throw new Error("Failed to allocate message buffer");s(c,u);const _=t._malloc(l.length);if(!_)throw new Error("Failed to allocate secret key buffer");s(l,_);const d=t._malloc(n);if(!d)throw new Error("Failed to allocate signature buffer");const m=t._malloc(4);if(!m)throw new Error("Failed to allocate signature length buffer");t.HEAPU32[m>>2]=n;try{o(t[`_dilithium${e}_sign`](d,m,u,c.length,_),"Signing");const i=t.HEAPU32[m>>2];if(i>n)throw new Error(`Signature length ${i} exceeds maximum ${n}`);const r=a(d,i);if(!r)throw new Error("Failed to copy signature data");return r}finally{t._free(u),t._free(_),t._free(d),t._free(m)}},verify(i,r,n){if(!t.HEAPU8)throw new Error("WASM memory not initialized");const o="string"==typeof i?(new TextEncoder).encode(i):i,a=t._malloc(o.length);if(!a)throw new Error("Failed to allocate message buffer");s(o,a);const l=t._malloc(r.length);if(!l)throw new Error("Failed to allocate signature buffer");s(r,l);const c=t._malloc(n.length);if(!c)throw new Error("Failed to allocate public key buffer");s(n,c);try{return 0===t[`_dilithium${e}_verify`](a,o.length,l,r.length,c)}finally{t._free(a),t._free(l),t._free(c)}},getPublicKeyLength:()=>i,getSecretKeyLength:()=>r,getSignatureLength:()=>n}}}},t={};function i(r){var n=t[r];if(void 0!==n)return n.exports;var o=t[r]={exports:{}};return e[r].call(o.exports,o,o.exports,i),o.exports}var r={};return(()=>{"use strict";var e=r;Object.defineProperty(e,"__esModule",{value:!0}),e.cleanupMcElieceFull=e.cleanupMcElieceSmall=e.cleanupFrodokem=e.cleanupMlkem=e.cleanupFalcon=e.cleanupSphincs=e.initMcElieceFull=e.initMcElieceSmall=e.initFrodokem=e.initMlkem=e.initFalcon=e.initSphincs=e.initDilithium=void 0,e.createPQ=n,e.cleanupPQ=o,e.cleanupPQFull=function(){o()},e.createSignatures=async function(){return(await n()).signatures},e.createKEM=async function(){return(await n()).kem},e.createKEMFull=async function(){return(await n()).kem},e.cleanupSignatures=function(){(0,t.cleanupDilithium)()},e.cleanupKEM=function(){},e.cleanupKEMFull=function(){};const t=i(768);async function n(){try{return{signatures:{dilithium:await(0,t.initDilithium)(),sphincs:{},falcon:{}},kem:{mlkem:{},frodokem:{},mceliece:{}}}}catch(e){throw console.error("Failed to initialize PQ library:",e),e}}function o(){(0,t.cleanupDilithium)()}e.initDilithium=t.initDilithium,e.initSphincs=()=>Promise.resolve({}),e.initFalcon=()=>Promise.resolve({}),e.initMlkem=()=>Promise.resolve({}),e.initFrodokem=()=>Promise.resolve({}),e.initMcElieceSmall=()=>Promise.resolve({}),e.initMcElieceFull=()=>Promise.resolve({}),e.cleanupSphincs=()=>{},e.cleanupFalcon=()=>{},e.cleanupMlkem=()=>{},e.cleanupFrodokem=()=>{},e.cleanupMcElieceSmall=()=>{},e.cleanupMcElieceFull=()=>{}})(),r})());